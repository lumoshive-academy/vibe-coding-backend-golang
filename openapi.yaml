openapi: 3.0.3
info:
  title: Todo List API
  version: 1.0.0
  description: RESTful API for managing todo lists.
servers:
  - url: http://localhost:8080
    description: Local development server
security:
  - bearerAuth: []
paths:
  /health:
    get:
      summary: Health check
      responses:
        '200':
          description: Service is healthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: ok
  /api/v1/todolists:
    post:
      summary: Create todo list
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTodoListRequest'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TodoList'
        '400':
          $ref: '#/components/responses/BadRequest'
        '422':
          $ref: '#/components/responses/ValidationError'
    get:
      summary: List todo lists
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of todo lists
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TodoList'
        '500':
          $ref: '#/components/responses/ServerError'
  /api/v1/todolists/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
    get:
      summary: Get todo list
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Todo list detail
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TodoList'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
    put:
      summary: Update todo list
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTodoListRequest'
      responses:
        '200':
          description: Updated todo list
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TodoList'
        '404':
          $ref: '#/components/responses/NotFound'
        '422':
          $ref: '#/components/responses/ValidationError'
        '500':
          $ref: '#/components/responses/ServerError'
    delete:
      summary: Delete todo list
      security:
        - bearerAuth: []
      responses:
        '204':
          description: Deleted successfully
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    TodoList:
      type: object
      properties:
        id:
          type: string
          format: uuid
        title:
          type: string
        description:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
      required:
        - id
        - title
    CreateTodoListRequest:
      type: object
      properties:
        title:
          type: string
          minLength: 3
          maxLength: 255
        description:
          type: string
          maxLength: 1024
      required:
        - title
    UpdateTodoListRequest:
      allOf:
        - $ref: '#/components/schemas/CreateTodoListRequest'
    Error:
      type: object
      properties:
        status:
          type: string
          example: error
        error:
          type: object
          additionalProperties: true
  responses:
    BadRequest:
      description: Invalid request payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    ValidationError:
      description: Validation error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    ServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
